name: Test

on:
  pull_request:
  push:
    branches:
      - master
      - releases/*

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        yarn

    - name: Build, format, lint, package, and test
      run: |
        yarn all

  simple_test:
    name: Simple test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run the action
        uses: ./
        with:
          appSlugFilter: github-actions

  race_condition_test:
    name: Race condition test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout race_condition_test branch
        uses: actions/checkout@v2
        with:
          ref: race_condition_test
          token: ${{ secrets.GITHUB_PAT }}
          path: race_condition_test

      - name: Make a commit to the race_condition_test branch
        run: |
          cd race_condition_test
          echo $(date +%s) > trigger_workflow.txt
          git add trigger_workflow.txt
          git config --global user.name "GitHub Actions"
          git config --global user.email "build@jitterbit.com"
          git commit -m "test: trigger race_condition_test workflow"
          git push

      - name: Wait for the commit's check suite(s) to complete
        id: await
        uses: ./
        with:
          ref: race_condition_test
          intervalSeconds: 15
          appSlugFilter: github-actions

      - name: Get conclusion of the commit's check suite(s)
        run: |
          echo "Conclusion: ${{ steps.await.outputs.conclusion }}"

  is_packaged:
    name: Check if packaged properly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          yarn

      - name: Clear dist/
        run: |
          rm -rf dist/*

      - name: Build, format, lint, package, and test
        run: |
          yarn all

      - name: Check if packaged properly
        run: |
          # If there are any unstaged or untracked files in 'dist/', then the action wasn't packaged properly
          if git diff --name-only | grep '^dist/' || git ls-files --other --exclude-standard | grep '^dist/'; then
            echo "You didn't package the action properly before pushing to remote." \
            echo "Always run 'yarn all' before staging a commit."
            echo "Below are the modified files in 'dist/' after running 'yarn && rm -rf dist/ && yarn all':"
            git diff --name-only | grep '^dist/'
            git ls-files --other --exclude-standard | grep '^dist/'
            exit 1
          fi
